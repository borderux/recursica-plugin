import path from 'path';
import type { ThemeTokens, ExportingProps, ValueToken, ExportingResult } from '../types';
import { autoGeneratedFile } from '../utils/autoGeneratedFile';
import { parseValue } from './generateVanillaExtractThemes';

interface GenerateUiKitParams {
  recursicaTokensFilename: string;
  themeContractFilename: string;
}

export function generateUiKit(
  uiKit: ThemeTokens,
  { recursicaTokensFilename, themeContractFilename }: GenerateUiKitParams,
  { outputPath, project }: ExportingProps
): ExportingResult {
  const uiKitFilename = `Recursica${project}UiKit.ts`;
  const uiKitPath = path.join(outputPath, uiKitFilename);

  const recursicaTokens = `Recursica${project}Tokens`;
  const uiKitContent = `${autoGeneratedFile()}
import { themeVars } from './${themeContractFilename.replace('.ts', '')}'
import { ${recursicaTokens} } from './${recursicaTokensFilename.replace('.ts', '')}'

export const uiKit = {
  ${Object.entries(uiKit)
    .map(([key, value]) => `'${key}': ${parseValue(value as ValueToken | string, recursicaTokens)}`)
    .join(',\n\t')}\n\t}`;

  return {
    content: uiKitContent,
    path: uiKitPath,
    filename: uiKitFilename,
  };
}
